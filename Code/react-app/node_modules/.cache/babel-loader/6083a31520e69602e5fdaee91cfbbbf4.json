{"ast":null,"code":"var _jsxFileName = \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\src\\\\GoodsDetails\\\\rotate\\\\test.jsx\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useLocation, useParams } from \"react-router-dom\"; // This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ModalSwitch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n}\n\nfunction ModalSwitch() {\n  var location = useLocation(); // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n\n  var background = location.state && location.state.background;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    children: React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/gallery\",\n    children: React.createElement(Gallery, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/img/:id\",\n    children: React.createElement(ImageView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), background && React.createElement(Route, {\n    path: \"/img/:id\",\n    children: React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nvar IMAGES = [{\n  id: 0,\n  title: \"Dark Orchid\",\n  color: \"DarkOrchid\"\n}, {\n  id: 1,\n  title: \"Lime Green\",\n  color: \"LimeGreen\"\n}, {\n  id: 2,\n  title: \"Tomato\",\n  color: \"Tomato\"\n}, {\n  id: 3,\n  title: \"Seven Ate Nine\",\n  color: \"#789\"\n}, {\n  id: 4,\n  title: \"Crimson\",\n  color: \"Crimson\"\n}];\n\nfunction Thumbnail(_ref) {\n  var color = _ref.color;\n  return React.createElement(\"div\", {\n    style: {\n      width: 50,\n      height: 50,\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n}\n\nfunction Image(_ref2) {\n  var color = _ref2.color;\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 400,\n      background: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n}\n\nfunction Home() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/gallery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Visit the Gallery\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Featured Images\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/img/2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Tomato\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/img/4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Crimson\"))));\n}\n\nfunction Gallery() {\n  var location = useLocation();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, IMAGES.map(function (i) {\n    return React.createElement(Link, {\n      key: i.id,\n      to: {\n        pathname: \"/img/\".concat(i.id),\n        // This is the trick! This link sets\n        // the `background` in location state.\n        state: {\n          background: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Thumbnail, {\n      color: i.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, i.title));\n  }));\n}\n\nfunction ImageView() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var image = IMAGES[parseInt(id, 10)];\n  if (!image) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Image not found\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, image.title), React.createElement(Image, {\n    color: image.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }));\n}\n\nfunction Modal() {\n  var history = useHistory();\n\n  var _useParams2 = useParams(),\n      id = _useParams2.id;\n\n  var image = IMAGES[parseInt(id, 10)];\n  if (!image) return null;\n\n  var back = function back(e) {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return React.createElement(\"div\", {\n    onClick: back,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      background: \"rgba(0, 0, 0, 0.15)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    style: {\n      position: \"absolute\",\n      background: \"#fff\",\n      top: 25,\n      left: \"10%\",\n      right: \"10%\",\n      padding: 15,\n      border: \"2px solid #444\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, image.title), React.createElement(Image, {\n    color: image.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Close\")));\n}","map":{"version":3,"sources":["D:\\NodeJS\\Practice\\mpp\\src\\GoodsDetails\\rotate\\test.jsx"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useHistory","useLocation","useParams","ModalGalleryExample","ModalSwitch","location","background","state","IMAGES","id","title","color","Thumbnail","width","height","Image","Home","Gallery","map","i","pathname","ImageView","image","parseInt","Modal","history","back","e","stopPropagation","goBack","position","top","left","bottom","right","padding","border"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\n// This example shows how to render two different screens\r\n// (or the same screen in a different context) at the same URL,\r\n// depending on how you got there.\r\n//\r\n// Click the \"featured images\" and see them full screen. Then\r\n// \"visit the gallery\" and click on the colors. Note the URL and\r\n// the component are the same as before but now we see them\r\n// inside a modal on top of the gallery screen.\r\n\r\nexport default function ModalGalleryExample() {\r\n  return (\r\n    <Router>\r\n      <ModalSwitch />\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction ModalSwitch() {\r\n  let location = useLocation();\r\n\r\n  // This piece of state is set when one of the\r\n  // gallery links is clicked. The `background` state\r\n  // is the location that we were at when one of\r\n  // the gallery links was clicked. If it's there,\r\n  // use it as the location for the <Switch> so\r\n  // we show the gallery in the background, behind\r\n  // the modal.\r\n  let background = location.state && location.state.background;\r\n\r\n  return (\r\n    <div>\r\n      <Switch >\r\n        <Route exact path=\"/\" children={<Home />} />\r\n        <Route path=\"/gallery\" children={<Gallery />} />\r\n        <Route path=\"/img/:id\" children={<ImageView />} />\r\n      </Switch>\r\n\r\n      {/* Show the modal when a background page is set */}\r\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IMAGES = [\r\n  { id: 0, title: \"Dark Orchid\", color: \"DarkOrchid\" },\r\n  { id: 1, title: \"Lime Green\", color: \"LimeGreen\" },\r\n  { id: 2, title: \"Tomato\", color: \"Tomato\" },\r\n  { id: 3, title: \"Seven Ate Nine\", color: \"#789\" },\r\n  { id: 4, title: \"Crimson\", color: \"Crimson\" }\r\n];\r\n\r\nfunction Thumbnail({ color }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 50,\r\n        height: 50,\r\n        background: color\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Image({ color }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: 400,\r\n        background: color\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/gallery\">Visit the Gallery</Link>\r\n      <h2>Featured Images</h2>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/img/2\">Tomato</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/img/4\">Crimson</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Gallery() {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      {IMAGES.map(i => (\r\n        <Link\r\n          key={i.id}\r\n          to={{\r\n            pathname: `/img/${i.id}`,\r\n            // This is the trick! This link sets\r\n            // the `background` in location state.\r\n            state: { background: location }\r\n          }}\r\n        >\r\n          <Thumbnail color={i.color} />\r\n          <p>{i.title}</p>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ImageView() {\r\n  let { id } = useParams();\r\n  let image = IMAGES[parseInt(id, 10)];\r\n\r\n  if (!image) return <div>Image not found</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{image.title}</h1>\r\n      <Image color={image.color} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Modal() {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  let image = IMAGES[parseInt(id, 10)];\r\n\r\n  if (!image) return null;\r\n\r\n  let back = e => {\r\n    e.stopPropagation();\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={back}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        background: \"rgba(0, 0, 0, 0.15)\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"modal\"\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"#fff\",\r\n          top: 25,\r\n          left: \"10%\",\r\n          right: \"10%\",\r\n          padding: 15,\r\n          border: \"2px solid #444\"\r\n        }}\r\n      >\r\n        <h1>{image.title}</h1>\r\n        <Image color={image.color} />\r\n        <button type=\"button\" onClick={back}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}