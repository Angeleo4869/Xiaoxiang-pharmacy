{"ast":null,"code":"import _classCallCheck from \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NodeJS\\\\Practice\\\\mpp\\\\src\\\\GoodsDetails\\\\rotate.jsx\";\nimport React from 'react';\nimport Swiper from 'react-swiper';\n\nvar SwiperCompoent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SwiperCompoent, _React$Component);\n\n  function SwiperCompoent(props) {\n    var _this;\n\n    _classCallCheck(this, SwiperCompoent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwiperCompoent).call(this, props));\n    _this.swiperId = \"\";\n    _this.word = \"\";\n    _this.titleImg = \"\";\n    _this.state = {\n      slides: props.exImg,\n      word: \"\"\n    };\n    _this.word = props.exWord[0];\n    _this.titleImg = props.exHeader;\n    _this.swiperId = props.exId;\n    return _this;\n  }\n\n  _createClass(SwiperCompoent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initSwiper();\n    }\n  }, {\n    key: \"initSwiper\",\n    value: function initSwiper() {\n      var _this2 = this;\n\n      var swiper = new Swiper('#' + this.swiperId, {\n        initialSlide: 0,\n        slidesPerView: 1,\n        freeMode: false,\n        normalizeSlideIndex: true,\n        stopOnLastSlide: true,\n        speed: 300,\n        spaceBetween: 40,\n        pagination: '.swiper-pagination',\n        paginationClickable: true,\n        onSlideChangeEnd: function onSlideChangeEnd(swiper) {\n          _this2.word = _this2.props.exWord[swiper.activeIndex];\n          /* 这里使用的是 非直接state的渲染模式 \r\n           利用setState的重新渲染机制 \r\n           当使用setState重新渲染组件时 将会把this.word的改变值 重新渲染上去\r\n           当然也可以 使用this.state.word 直接渲染 */\n\n          _this2.setState({\n            word: \"\"\n          });\n        },\n        onTouchMove: function onTouchMove(swiper, e) {},\n        onClickNext: function onClickNext(swiper, e) {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"swiper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"swiper-header\",\n        src: this.titleImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"swiper-piper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"swiper-container\",\n        id: this.swiperId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"swiper-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.slides.map(function (slide, index) {\n        return React.createElement(\"div\", {\n          className: \"swiper-slide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: slide,\n          className: \"swiper-img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        class: \"swiper-pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"swiper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.word)));\n    }\n  }]);\n\n  return SwiperCompoent;\n}(React.Component);\n\nexport { SwiperCompoent as default };","map":{"version":3,"sources":["D:\\NodeJS\\Practice\\mpp\\src\\GoodsDetails\\rotate.jsx"],"names":["React","Swiper","SwiperCompoent","props","swiperId","word","titleImg","state","slides","exImg","exWord","exHeader","exId","initSwiper","swiper","initialSlide","slidesPerView","freeMode","normalizeSlideIndex","stopOnLastSlide","speed","spaceBetween","pagination","paginationClickable","onSlideChangeEnd","activeIndex","setState","onTouchMove","e","onClickNext","map","slide","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport Swiper from 'react-swiper';\r\n\r\n\r\nexport default class SwiperCompoent extends React.Component {\r\n    swiperId=\"\";\r\n    word=\"\";\r\n    titleImg=\"\";\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        slides: props.exImg,\r\n        word:\"\"\r\n      }\r\n      this.word=props.exWord[0];\r\n      this.titleImg=props.exHeader;\r\n      this.swiperId=props.exId;\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.initSwiper();\r\n    }\r\n     initSwiper(){\r\n      const swiper = new Swiper('#'+this.swiperId, {\r\n        initialSlide: 0,\r\n        slidesPerView: 1,\r\n        freeMode: false,\r\n        normalizeSlideIndex: true,\r\n        stopOnLastSlide: true,\r\n        speed: 300,\r\n        spaceBetween: 40,\r\n        pagination: '.swiper-pagination',\r\n        paginationClickable: true,\r\n        onSlideChangeEnd: (swiper) => {\r\n          this.word=this.props.exWord[swiper.activeIndex];\r\n          /* 这里使用的是 非直接state的渲染模式 \r\n           利用setState的重新渲染机制 \r\n           当使用setState重新渲染组件时 将会把this.word的改变值 重新渲染上去\r\n           当然也可以 使用this.state.word 直接渲染 */\r\n           this.setState({\r\n            word:\"\"\r\n            }); \r\n        },\r\n        onTouchMove: (swiper, e) => {},\r\n        onClickNext: (swiper, e) => {}\r\n      });\r\n     }\r\n    render() {\r\n      return (\r\n        <div className=\"swiper\">\r\n          <div>\r\n            <img className=\"swiper-header\" src={this.titleImg} />\r\n          </div>\r\n          <div className=\"swiper-piper\">\r\n            <div className=\"swiper-container\" id={this.swiperId}>\r\n              <div className=\"swiper-wrapper\">\r\n                {this.state.slides.map((slide, index) => (\r\n                  <div className=\"swiper-slide\">\r\n                    <img src={slide} className=\"swiper-img\" />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div class=\"swiper-pagination\"></div>\r\n            </div>\r\n            <div className=\"swiper-text\">\r\n              {this.word}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}